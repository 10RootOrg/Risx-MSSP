services:

  # The 'setup' service runs a one-off script which initializes users inside
  # Elasticsearch — such as 'logstash_internal' and 'kibana_system' — with the
  # values of the passwords defined in the '.env' file. It also creates the
  # roles required by some of these users.
  #
  # This task only needs to be performed once, during the *initial* startup of
  # the stack. Any subsequent run will reset the passwords of existing users to
  # the values defined inside the '.env' file, and the built-in roles to their
  # default permissions.
  #
  # By default, it is excluded from the services started by 'docker compose up'
  # due to the non-default profile it belongs to. To run it, either provide the
  # '--profile=setup' CLI flag to Compose commands, or "up" the service by name
  # such as 'docker compose up setup'.
  setup:
    profiles:
      - setup
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    command:
      - sh
      - setup_start_with_secrets.sh
    volumes:
      - ./setup_start_with_secrets.sh:/setup_start_with_secrets.sh:ro,Z
      - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./setup/lib.sh:/lib.sh:ro,Z
      - ./setup/roles:/roles:ro,Z
    secrets:
      - ELASTIC_PASSWORD
      - LOGSTASH_INTERNAL_PASSWORD
      - KIBANA_SYSTEM_PASSWORD
      - METRICBEAT_INTERNAL_PASSWORD
      - FILEBEAT_INTERNAL_PASSWORD
      - HEARTBEAT_INTERNAL_PASSWORD
      - MONITORING_INTERNAL_PASSWORD
      - BEATS_SYSTEM_PASSWORD
    networks:
      - main_network
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    command:
      - sh
      - elasticsearch_start_with_secrets.sh
    volumes:
      - ./elasticsearch_start_with_secrets.sh:/elasticsearch_start_with_secrets.sh:ro,Z
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: elasticsearch
      xpack.security.enabled: true
      xpack.license.self_generated.type: basic
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    secrets:
      - ELASTIC_PASSWORD
    networks:
      - main_network
    restart: unless-stopped

  logstash:
    build:
      context: logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - 5044:5044
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
    secrets:
      - LOGSTASH_INTERNAL_PASSWORD
    networks:
      - main_network
    depends_on:
      - elasticsearch
    restart: unless-stopped

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
      - ./kibana/config/kibana.yml:/home/Eleven1978/nginx/etc/nginx/kibana.yml:ro,Z
      - ./kibana:/etc/nginx
    ports:
      - 5601:5601
    environment:
      xpack.security.enabled: true
      xpack.spaces.enabled: false
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      SERVER_NAME: http://host.docker.internal/kibana
      SERVER_BASEPATH: /kibana
      SERVER_DEFAULTINDEX: artifact*
      SERVER_SHOWINSECURECLUSTERWARNING: false
      TELEMETRY_ENABLED: false
    secrets:
      - KIBANA_SYSTEM_PASSWORD
    networks:
      - main_network
    depends_on:
      - elasticsearch
    restart: unless-stopped

networks:
  main_network:
    external: true

volumes:
  elasticsearch:

secrets:
  ELASTIC_PASSWORD:
    file: env.ELASTIC_PASSWORD.secret
  LOGSTASH_INTERNAL_PASSWORD:
    file: env.LOGSTASH_INTERNAL_PASSWORD.secret
  KIBANA_SYSTEM_PASSWORD:
    file: env.KIBANA_SYSTEM_PASSWORD.secret
  METRICBEAT_INTERNAL_PASSWORD:
    file: env.METRICBEAT_INTERNAL_PASSWORD.secret
  FILEBEAT_INTERNAL_PASSWORD:
    file: env.FILEBEAT_INTERNAL_PASSWORD.secret
  HEARTBEAT_INTERNAL_PASSWORD:
    file: env.HEARTBEAT_INTERNAL_PASSWORD.secret
  MONITORING_INTERNAL_PASSWORD:
    file: env.MONITORING_INTERNAL_PASSWORD.secret
  BEATS_SYSTEM_PASSWORD:
    file: env.BEATS_SYSTEM_PASSWORD.secret
